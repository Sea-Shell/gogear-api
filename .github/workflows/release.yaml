name: "Build Push and Deploy main"

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

env:
  IMAGE_REGISTRY: docker.io
  IMAGE_REPOSITORY: bateau
  IMAGE_NAME: gogear-api

permissions:
  contents: read

jobs:
  release:
    name: release
    uses: nrkno/github-workflow-semantic-release/.github/workflows/workflow.yaml@v3.0.1
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
      actions: write
    with:
      runs-on: ubuntu-latest
      release-enabled: true
      lint-enabled: false
  build:
    runs-on: [ubuntu-latest]
    outputs:
      digest: ${{ steps.build_push.outputs.digest }}
    needs: release
    steps:
      # Checkout repo code
      - name: Checkout repo
        uses: actions/checkout@v4.1.1
        with:
          ref: refs/tags/${{ needs.release.outputs.git-tag }}
          fetch-depth: 0
      # Docker login/build/push
      - uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.1.0
      - name: Build and push
        id: build_push
        uses: docker/build-push-action@v5.1.0
        with:
          push: true
          cache-from: type=registry,ref=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:build-cache
          cache-to: type=registry,ref=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:build-cache,mode=max,ignore-error=true
          tags: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ needs.release.outputs.git-tag }}
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
  deploy:
    runs-on: [ubuntu-latest]
    needs: [release, build ]
    permissions:
      id-token: write
      actions: read
      contents: read
    steps:
      # Checkout repo code
      - name: Checkout repo
        uses: actions/checkout@v4.1.1
        with:
          ref: refs/tags/${{ needs.release.outputs.git-tag }}
          fetch-depth: 0
      - name: Kubeconfig context
        uses: azure/k8s-set-context@v3.1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TAIL_SCALE_OAUTH_CLIENT }}
          oauth-secret: ${{ secrets.TAIL_SCALE_OAUTH_CLIENT_SECRET }}
          tags: tag:github
      # Do the deploy on K8s cluster set in the above context
      - name: Deply manifests to k8s
        uses: azure/k8s-deploy@v4.10
        timeout-minutes: 15
        with:
          action: deploy
          annotate-namespace: false
          images: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ needs.release.outputs.git-tag }}@${{ needs.build.outputs.digest }}
          manifests: kubernetes-manifests
          namespace: seashell
          strategy: basic
