// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "support@seashell.no"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/category/list": {
            "get": {
                "description": "Get a list of category items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "List categories",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Top category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Top gear category",
                        "name": "topCategory",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.ResponsePayload"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.GearCategory"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/category/update": {
            "post": {
                "description": "Update category identified by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update category with ID",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GearCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success when all goes well",
                        "schema": {
                            "$ref": "#/definitions/models.Status"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/category/{category}": {
            "get": {
                "description": "Get category spessific to ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get category with ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Unique ID of category you want to get",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/models.GearCategory"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/gear/insert": {
            "put": {
                "description": "Insert new gear with corresponding values",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gear"
                ],
                "summary": "Insert new gear",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GearNoId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success when all goes well",
                        "schema": {
                            "$ref": "#/definitions/models.Status"
                        }
                    }
                }
            }
        },
        "/gear/list": {
            "get": {
                "description": "Get a list of gear items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gear"
                ],
                "summary": "List gear",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Gear category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Top gear category",
                        "name": "topCategory",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Gear manufacturer",
                        "name": "manufacturer",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "string collection",
                        "name": "collection",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.ResponsePayload"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.GearListItem"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/gear/update": {
            "post": {
                "description": "Update gear identified by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gear"
                ],
                "summary": "Update gear with ID",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Gear"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success when all goes well",
                        "schema": {
                            "$ref": "#/definitions/models.Status"
                        }
                    }
                }
            }
        },
        "/gear/{gear}": {
            "get": {
                "description": "Get gear spessific to ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gear"
                ],
                "summary": "Get gear with ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Unique ID of Gear you want to get",
                        "name": "gear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/models.FullGear"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get health status of application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Get application health",
                "responses": {
                    "200": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/models.Health"
                        }
                    }
                }
            }
        },
        "/manufacture/insert": {
            "put": {
                "description": "Insert new manufacture with corresponding values",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manufacture"
                ],
                "summary": "Insert new manufacture",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Manufacture"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success when all goes well",
                        "schema": {
                            "$ref": "#/definitions/models.Status"
                        }
                    }
                }
            }
        },
        "/manufacture/list": {
            "get": {
                "description": "Get a list of manufacturers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manufacture"
                ],
                "summary": "List manufacture",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by manufacturename (this is case insensitive and wildcard)",
                        "name": "manufacture",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by manufactures full name (this is case insensitive and wildcard)",
                        "name": "manufacturename",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.ResponsePayload"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Manufacture"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/manufacture/update": {
            "post": {
                "description": "Update manufacture identified by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manufacture"
                ],
                "summary": "Update manufacture with ID",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Manufacture"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success when all goes well",
                        "schema": {
                            "$ref": "#/definitions/models.Status"
                        }
                    }
                }
            }
        },
        "/manufacture/{manufacture}": {
            "get": {
                "description": "Get manufacture spessific to ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manufacture"
                ],
                "summary": "Get manufacture by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Unique ID of Gear you want to get",
                        "name": "manufacture",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/models.Manufacture"
                        }
                    }
                }
            }
        },
        "/topCategory/insert": {
            "put": {
                "description": "Insert new category with corresponding values",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Insert new category",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GearCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success when all goes well",
                        "schema": {
                            "$ref": "#/definitions/models.Status"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/topCategory/list": {
            "get": {
                "description": "Get a list of top category items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Top category"
                ],
                "summary": "List top categories",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "top categories",
                        "name": "topCategory",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.ResponsePayload"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.GearTopCategory"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/topCategory/update": {
            "post": {
                "description": "Update top category identified by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Top category"
                ],
                "summary": "Update top category with ID",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GearTopCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success when all goes well",
                        "schema": {
                            "$ref": "#/definitions/models.Status"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/topCategory/{topCategory}": {
            "get": {
                "description": "Get top category spessific to ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Top category"
                ],
                "summary": "Get top category with ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Unique ID of top category you want to get",
                        "name": "topCategoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/models.GearTopCategory"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/user/insert": {
            "put": {
                "description": "Insert new user with corresponding values",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Insert new user",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserWithPass"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success when all goes well",
                        "schema": {
                            "$ref": "#/definitions/models.Status"
                        }
                    }
                }
            }
        },
        "/user/list": {
            "get": {
                "description": "Get a list of user items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "List user",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by username (this is case insensitive and wildcard)",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by users full name (this is case insensitive and wildcard)",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.ResponsePayload"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/user/update": {
            "post": {
                "description": "Update user identified by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user with ID",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success when all goes well",
                        "schema": {
                            "$ref": "#/definitions/models.Status"
                        }
                    }
                }
            }
        },
        "/user/{user}": {
            "get": {
                "description": "Get user spessific to ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user with ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Unique ID of Gear you want to get",
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "desc",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.FullGear": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "category_name": {
                    "type": "string"
                },
                "category_top_category_id": {
                    "type": "string"
                },
                "gear_category_id": {
                    "type": "integer"
                },
                "gear_height": {
                    "type": "integer"
                },
                "gear_id": {
                    "type": "integer"
                },
                "gear_length": {
                    "type": "integer"
                },
                "gear_manufacture_id": {
                    "type": "integer"
                },
                "gear_name": {
                    "type": "string"
                },
                "gear_status": {
                    "type": "boolean"
                },
                "gear_top_category_id": {
                    "type": "integer"
                },
                "gear_weight": {
                    "type": "integer"
                },
                "gear_width": {
                    "type": "integer"
                },
                "manufacture_id": {
                    "type": "integer"
                },
                "manufacture_name": {
                    "type": "string"
                },
                "top_category_id": {
                    "type": "integer"
                },
                "top_category_name": {
                    "type": "string"
                }
            }
        },
        "models.Gear": {
            "type": "object",
            "properties": {
                "gear_category_id": {
                    "type": "integer"
                },
                "gear_height": {
                    "type": "integer"
                },
                "gear_id": {
                    "type": "integer"
                },
                "gear_length": {
                    "type": "integer"
                },
                "gear_manufacture_id": {
                    "type": "integer"
                },
                "gear_name": {
                    "type": "string"
                },
                "gear_status": {
                    "type": "boolean"
                },
                "gear_top_category_id": {
                    "type": "integer"
                },
                "gear_weight": {
                    "type": "integer"
                },
                "gear_width": {
                    "type": "integer"
                }
            }
        },
        "models.GearCategory": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "category_name": {
                    "type": "string"
                },
                "category_top_category_id": {
                    "type": "integer"
                }
            }
        },
        "models.GearListItem": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "category_name": {
                    "type": "string"
                },
                "category_top_category_id": {
                    "type": "string"
                },
                "gear_category_id": {
                    "type": "integer"
                },
                "gear_id": {
                    "type": "integer"
                },
                "gear_manufacture_id": {
                    "type": "integer"
                },
                "gear_name": {
                    "type": "string"
                },
                "gear_top_category_id": {
                    "type": "integer"
                },
                "manufacture_id": {
                    "type": "integer"
                },
                "manufacture_name": {
                    "type": "string"
                },
                "top_category_id": {
                    "type": "integer"
                },
                "top_category_name": {
                    "type": "string"
                }
            }
        },
        "models.GearNoId": {
            "type": "object",
            "properties": {
                "gear_category_id": {
                    "type": "integer"
                },
                "gear_height": {
                    "type": "integer"
                },
                "gear_length": {
                    "type": "integer"
                },
                "gear_manufacture_id": {
                    "type": "integer"
                },
                "gear_name": {
                    "type": "string"
                },
                "gear_status": {
                    "type": "boolean"
                },
                "gear_top_category_id": {
                    "type": "integer"
                },
                "gear_weight": {
                    "type": "integer"
                },
                "gear_width": {
                    "type": "integer"
                }
            }
        },
        "models.GearTopCategory": {
            "type": "object",
            "properties": {
                "top_category_id": {
                    "type": "integer"
                },
                "top_category_name": {
                    "type": "string"
                }
            }
        },
        "models.Health": {
            "type": "object",
            "properties": {
                "documentation": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "models.Manufacture": {
            "type": "object",
            "properties": {
                "manufacture_id": {
                    "type": "integer"
                },
                "manufacture_name": {
                    "type": "string"
                }
            }
        },
        "models.ResponsePayload": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "item_limit": {
                    "type": "integer"
                },
                "items": {},
                "next_page": {
                    "type": "string"
                },
                "prev_page": {
                    "type": "string"
                },
                "total_item_count": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "models.Status": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "user_email": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                },
                "user_username": {
                    "type": "string"
                }
            }
        },
        "models.UserWithPass": {
            "type": "object",
            "properties": {
                "user_email": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                },
                "user_password": {
                    "type": "string"
                },
                "user_username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "GoGear API",
	Description:      "This is the API of GoGear",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
